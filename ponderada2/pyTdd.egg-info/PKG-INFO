Metadata-Version: 2.1
Name: pyTdd
Version: 1.0
Summary: Teste TDD
Home-page: https://inteli.edu
Author: Rodrigo Nicola
Author-email: nicola@prof.inteli.edu.br
Classifier: Programming Language :: Python :: 3
Classifier: Operating System :: OS Independent
Requires-Python: >=3.8
Description-Content-Type: text/markdown
Requires-Dist: requests
Requires-Dist: importlib-metadata
Requires-Dist: pydantic
Provides-Extra: test
Requires-Dist: pytest; extra == "test"
Requires-Dist: pytest-cov; extra == "test"
Requires-Dist: mypy; extra == "test"
Requires-Dist: flake8; extra == "test"
Requires-Dist: tox; extra == "test"

# MQTT Publisher

Este projeto inclui um script Python que publica mensagens JSON em um tópico MQTT, utilizando o Mosquitto como broker. 
As mensagens contêm dados simulados de medições, respeitando especificações técnicas como faixa de medição e alcance espectral.

## Configuração do Mosquitto
Você deve configurar o Mosquitto antes de iniciá-lo. 
Supondo que você tenha um arquivo de configuração chamado mosquitto.conf, você pode iniciar o Mosquitto com a seguinte linha de comando:
```

mosquitto -c mosquitto.conf

```

Esse comando inicia o broker Mosquitto com as configurações definidas em mosquitto.conf.

## Executando o Publisher

Para executar o script do publisher, navegue até o diretório onde o arquivo publisher.py está localizado e execute o seguinte comando no terminal:
```

python3 publisher.py

```

Isso iniciará o script que publicará mensagens JSON simuladas para o tópico MQTT no intervalo definido. O script imprimirá no terminal cada mensagem que for publicada.

Segue vídeo para ver minha solução funcionando. Basta clicar [aqui](https://youtu.be/RBNywO2PM0E)
